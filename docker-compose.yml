version: "3.8"

services:
  backend:
    build: ./backend
    container_name: nodejs-backend
    ports:
      - "5000:5000"
    environment:
      # Vault AppRole settings
      VAULT_ADDR: "http://34.134.95.91:8200"
      ROLE_ID: "2734e58a-34ec-b9e3-ce22-9edfba033e18"
      SECRET_ID: "743188e8-305e-8763-2726-4ce4bca9403d"

    networks:
      - app-network
    depends_on:
      - db
    labels:
      co.elastic.logs/enabled: "true"
      co.elastic.logs/module: "nodejs"
      co.elastic.logs/json_keys_under_root: "true"
      co.elastic.logs/json_add_error_key: "true"
      co.elastic.logs/json.message_key: "log"

  frontend:
    build: ./frontend
    container_name: nodejs-frontend
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_BACKEND_URL=http://backend:5000
    networks:
      - app-network
    depends_on:
      - backend
    labels:
      co.elastic.logs/enabled: "true"
      co.elastic.logs/module: "nodejs"
      co.elastic.logs/json_keys_under_root: "true"
      co.elastic.logs/json_add_error_key: "true"
      co.elastic.logs/json.message_key: "log"

  db:
    image: postgres:14
    container_name: nodejs-db
    environment:
      POSTGRES_USER: "Narne"
      POSTGRES_PASSWORD: "Prudent@5679$"
      POSTGRES_DB: "sai"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "5432:5432"
    networks:
      - app-network

networks:
  app-network:

volumes:
  pgdata:

